/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projectmanagementsystem;

import com.mycompany.projectmanagementsystem.GeneralFunction.FileHandler;
import com.mycompany.projectmanagementsystem.GeneralFunction.SessionManager;
import com.mycompany.projectmanagementsystem.User.User;
import com.mycompany.projectmanagementsystem.User.UserController;
import java.awt.Toolkit;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
/**
 *
 * @author user
 */
public class LecturerDashboardPage extends javax.swing.JFrame {

    /**
     * Creates new form LecturerDashboardPage
     */
    private final SessionManager sessionManager = SessionManager.getInstance();
    User user = sessionManager.getCurrentUser();
    private JPanel AssessmentPanel;
    private JButton AssessmentViewBtn;
    private JPanel AssessmentBackgroundPanel;
    private JLabel bg;
    private JLabel AssessmentNameLabel;
    private JLabel IntakeCodeLabel;
    private JPanel contentPanel;
    List<JPanel> assessments = new ArrayList<JPanel>();
    private JLabel lastClickedLabel = null;
    private String AssmntID;
    private String intakeCode;
    
    public LecturerDashboardPage() {
        initComponents();
        jLabel7.setText("Welcome: Lecturer " + "(" + user.getName() + " " + user.getUserID() + ")");
        // Simulate the click event for AssessmentNameLabel after all components are loaded
        SwingUtilities.invokeLater(() -> simulateLabelClick(supervisorLabel));
        setIconImage();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        LecLogOutLabel = new javax.swing.JLabel();
        ProfileLabel = new javax.swing.JLabel();
        NotiLabel = new javax.swing.JLabel();
        SumRptLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        supervisorLabel = new javax.swing.JLabel();
        secMarkerLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lecturer Dashboard Page");
        setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new Color(255, 255, 255, 90));
        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 73));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 73));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 73));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sysco_logo.png"))); // NOI18N
        jLabel2.setText("logo");
        jLabel2.setMaximumSize(new java.awt.Dimension(184, 42));
        jLabel2.setMinimumSize(new java.awt.Dimension(184, 42));
        jLabel2.setPreferredSize(new java.awt.Dimension(184, 42));

        LecLogOutLabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        LecLogOutLabel.setForeground(new java.awt.Color(2, 50, 99));
        LecLogOutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LecLogOutLabel.setText("Log Out");
        LecLogOutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LecLogOutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LecLogOutLabelMouseClicked(evt);
            }
        });

        ProfileLabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        ProfileLabel.setForeground(new java.awt.Color(2, 50, 99));
        ProfileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProfileLabel.setText("Profile");
        ProfileLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ProfileLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProfileLabelMouseClicked(evt);
            }
        });

        NotiLabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        NotiLabel.setForeground(new java.awt.Color(2, 50, 99));
        NotiLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NotiLabel.setText("Notification");
        NotiLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NotiLabel.setMaximumSize(new java.awt.Dimension(37, 21));
        NotiLabel.setMinimumSize(new java.awt.Dimension(37, 21));
        NotiLabel.setPreferredSize(new java.awt.Dimension(37, 21));
        NotiLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NotiLabelMouseClicked(evt);
            }
        });

        SumRptLabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        SumRptLabel.setForeground(new java.awt.Color(2, 50, 99));
        SumRptLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SumRptLabel.setText("Summary Report");
        SumRptLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SumRptLabel.setMaximumSize(new java.awt.Dimension(37, 21));
        SumRptLabel.setMinimumSize(new java.awt.Dimension(37, 21));
        SumRptLabel.setPreferredSize(new java.awt.Dimension(37, 21));
        SumRptLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SumRptLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addComponent(SumRptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NotiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProfileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LecLogOutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProfileLabel)
                    .addComponent(LecLogOutLabel)
                    .addComponent(NotiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SumRptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N
        jLabel7.setText("Welcome: Lecturer ()");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 970, 30));

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setDividerLocation(147);
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setMaximumSize(new java.awt.Dimension(294, 34));
        jSplitPane1.setMinimumSize(new java.awt.Dimension(294, 34));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(294, 34));

        supervisorLabel.setBackground(new java.awt.Color(255, 255, 255));
        supervisorLabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        supervisorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        supervisorLabel.setText("Supervisor");
        supervisorLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        supervisorLabel.setMaximumSize(new java.awt.Dimension(147, 34));
        supervisorLabel.setMinimumSize(new java.awt.Dimension(147, 34));
        supervisorLabel.setOpaque(true);
        supervisorLabel.setPreferredSize(new java.awt.Dimension(149, 34));
        supervisorLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supervisorLabelMouseClicked(evt);
            }
        });
        jSplitPane1.setLeftComponent(supervisorLabel);

        secMarkerLabel.setBackground(new java.awt.Color(255, 255, 255));
        secMarkerLabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        secMarkerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secMarkerLabel.setText("Second Marker");
        secMarkerLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        secMarkerLabel.setMaximumSize(new java.awt.Dimension(147, 34));
        secMarkerLabel.setMinimumSize(new java.awt.Dimension(147, 34));
        secMarkerLabel.setOpaque(true);
        secMarkerLabel.setPreferredSize(new java.awt.Dimension(148, 34));
        secMarkerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                secMarkerLabelMouseClicked(evt);
            }
        });
        jSplitPane1.setRightComponent(secMarkerLabel);

        getContentPane().add(jSplitPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 106, -1, -1));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setMaximumSize(new java.awt.Dimension(950, 530));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(950, 530));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(950, 530));
        jScrollPane2.getViewport().setBackground(Color.WHITE);
        jScrollPane2.setBackground(Color.WHITE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setMaximumSize(new java.awt.Dimension(950, 530));
        jPanel2.setMinimumSize(new java.awt.Dimension(950, 530));
        jPanel2.setPreferredSize(new java.awt.Dimension(950, 530));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 950, 530));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_background.png"))); // NOI18N
        jLabel1.setText("background");
        jLabel1.setMaximumSize(new java.awt.Dimension(1000, 700));
        jLabel1.setMinimumSize(new java.awt.Dimension(1000, 700));
        jLabel1.setPreferredSize(new java.awt.Dimension(1000, 700));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void supervisorLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supervisorLabelMouseClicked
        if (jPanel2.getComponentCount() > 0) { // Check if panel has any components
            clearPanel(); // Clear the panel if there are components
        }
        onLabelClick(supervisorLabel);
        showSpvAssessmentInfo();
    }//GEN-LAST:event_supervisorLabelMouseClicked

    private void secMarkerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_secMarkerLabelMouseClicked
        clearPanel();
        onLabelClick(secMarkerLabel);
        showSecMarkerAssessmentInfo();
    }//GEN-LAST:event_secMarkerLabelMouseClicked

    private void LecLogOutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LecLogOutLabelMouseClicked
        int confirm = JOptionPane.showConfirmDialog(null, "Are you confirmed to log out?", 
                    "Confirmation", JOptionPane.YES_NO_OPTION);
        if(confirm == JOptionPane.YES_OPTION){
            this.setVisible(false);
            UserController logout = new UserController();
            logout.userLogout();
        } else {}
    }//GEN-LAST:event_LecLogOutLabelMouseClicked

    private void ProfileLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileLabelMouseClicked
        this.setVisible(false);
        LecturerProfile profile = new LecturerProfile(AssmntID, intakeCode);
        profile.setVisible(true);
    }//GEN-LAST:event_ProfileLabelMouseClicked

    private void NotiLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NotiLabelMouseClicked
        NotificationPage lectNoti = new NotificationPage();
        lectNoti.setVisible(true);
    }//GEN-LAST:event_NotiLabelMouseClicked

    private void SumRptLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SumRptLabelMouseClicked
        this.setVisible(false);
        LecturerSummaryReport lectSumRpt = new LecturerSummaryReport(AssmntID, intakeCode);
        lectSumRpt.setVisible(true);
    }//GEN-LAST:event_SumRptLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    private void simulateLabelClick(JLabel label) {
        // Create a MouseEvent to simulate the click
        MouseEvent clickEvent = new MouseEvent(
            label,
            MouseEvent.MOUSE_CLICKED,
            System.currentTimeMillis(),
            0,
            0,
            0,
            1,
            false
        );

        // Dispatch the event to the label
        for (MouseListener mouseAdapter : label.getMouseListeners()) {
            mouseAdapter.mouseClicked(clickEvent);
        }
    }
    
    private void onLabelClick(JLabel clickedLabel) {
        // Clear the background color of the last clicked label
        if (lastClickedLabel != null && lastClickedLabel != clickedLabel) {
            lastClickedLabel.setBackground(Color.WHITE);
            lastClickedLabel.setOpaque(true);
        }

        // Set the background color of the currently clicked label to light gray
        clickedLabel.setBackground(Color.LIGHT_GRAY);
        clickedLabel.setOpaque(true);

        // Update the last clicked label reference
        lastClickedLabel = clickedLabel;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecturerDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecturerDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecturerDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecturerDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecturerDashboardPage().setVisible(true);
            }
        });
        
    }
    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Sysco_icon_with_background.png")));
    }
    
    
    private void showSpvAssessmentInfo() {
        List<String> AssmntData = FileHandler.readFile("assessment.txt");
        Collections.reverse(AssmntData);
        boolean AssessmentFound = false;

        // Create a panel to hold all assessment panels
        contentPanel = new JPanel();
        contentPanel.setLayout(null); // Set null layout for absolute positioning

        // Constants for layout
        int panelWidth = 300;
        int panelHeight = 255;
        int xGap = 8;
        int yGap = 8;
        int panelsPerRow = 3;

        int x = xGap;
        int y = yGap;
        int count = 0;
        
        for (String line : AssmntData) {
            String[] AssmntList = line.split(";");
            if (user.getUserID().equals(AssmntList[4])) {
                AssmntID = AssmntList[0];
                intakeCode = AssmntList[2];
                AssessmentPanel = new JPanel();
                AssessmentPanel.setBackground(Color.WHITE);
                AssessmentPanel.setPreferredSize(new java.awt.Dimension(panelWidth, panelHeight));
                AssessmentPanel.setBounds(x, y, panelWidth, panelHeight);
                AssessmentPanel.setLayout(null);
                
                AssessmentBackgroundPanel = new JPanel();
                bg = new JLabel();
                AssessmentNameLabel = new javax.swing.JLabel();

                switch (AssmntList[1]) {
                    case "internship_report" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/internship.png")));
                       
                        AssessmentNameLabel.setText("Internship Report");
                    }
                    case "fyp" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/final_year_project.png")));
                        
                        AssessmentNameLabel.setText("Final Year Project");
                    }
                    case "investigation" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/investigation_report.png")));

                        AssessmentNameLabel.setText("Investigation Report");
                    }
                    case "cp1" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/capstone_project.png")));
                        
                        AssessmentNameLabel.setText("Capstone Project 1");
                    }
                    case "cp2" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/capstone_project.png")));
                        
                        AssessmentNameLabel.setText("Capstone Project 2");
                    }
                    case "rmcp" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/research_methodology.png")));
                        
                        AssessmentNameLabel.setText("<html>" + "Research Methodology for Capstone Project" + "</html>");
                    }
                }
                
                AssessmentBackgroundPanel.setBounds(0, 0, panelWidth, 150);
                bg.setBounds(0, 0, panelWidth, 150);
                AssessmentBackgroundPanel.add(bg);
                AssessmentBackgroundPanel.setLayout(null);
                
                AssessmentNameLabel.setFont(new java.awt.Font("Bell MT", 1, 18));
                AssessmentNameLabel.setForeground(new java.awt.Color(2, 50, 99));
                AssessmentNameLabel.setBounds(10, 160, 250, 35);
                        
                IntakeCodeLabel = new javax.swing.JLabel();
                IntakeCodeLabel.setFont(new java.awt.Font("Bell MT", 1, 14)); 
                IntakeCodeLabel.setForeground(new java.awt.Color(2, 50, 99));
                IntakeCodeLabel.setBounds(10, 200, 182, 20);
                IntakeCodeLabel.setText(AssmntList[2]);

                AssessmentViewBtn = new javax.swing.JButton();
                AssessmentViewBtn.setBackground(new java.awt.Color(76, 127, 174));
                AssessmentViewBtn.setFont(new java.awt.Font("Bell MT", 1, 12)); 
                AssessmentViewBtn.setForeground(new java.awt.Color(255, 255, 255));
                AssessmentViewBtn.setText("View");
                AssessmentViewBtn.setBounds(230, 220, 60, 25);
                AssessmentViewBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                AssessmentViewBtn.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        redirectIntakePage(AssmntList[0],AssmntList[2], AssmntList[1]);
                    }
                });
                
                AssessmentPanel.add(AssessmentBackgroundPanel);
                AssessmentPanel.add(AssessmentNameLabel);
                AssessmentPanel.add(IntakeCodeLabel);
                AssessmentPanel.add(AssessmentViewBtn);
        
                contentPanel.add(AssessmentPanel);
                jPanel2.add(contentPanel);
                assessments.add(AssessmentPanel);
                AssessmentFound = true;
                
                count++;
                if (count % panelsPerRow == 0) {
                    x = xGap;
                    y += panelHeight + yGap;
                } else {
                    x += panelWidth + xGap;
                }
            }
        }
        if (!AssessmentFound) {
            JLabel noAssmntLabel = new JLabel("No Assessment Assigned");
            noAssmntLabel.setFont(new java.awt.Font("SansSerif", 1, 16));
            noAssmntLabel.setForeground(new java.awt.Color(2, 50, 99));

            contentPanel.setLayout(new GridBagLayout());
            GridBagConstraints gbc = new GridBagConstraints();

            gbc.gridx = 0;
            gbc.gridy = 0;
            gbc.gridwidth = GridBagConstraints.REMAINDER;
            gbc.gridheight = GridBagConstraints.REMAINDER;
            gbc.weightx = 1.0;
            gbc.weighty = 1.0;
            gbc.anchor = GridBagConstraints.CENTER;
            gbc.insets = new Insets(0, 0, 0, 0);

            contentPanel.add(noAssmntLabel, gbc);
        }
        
        // Set preferred size for the content panel based on the number of items
        int numRows = (count + panelsPerRow - 1) / panelsPerRow; // Calculate number of rows needed
        int contentHeight = numRows * (panelHeight + yGap) + yGap; // Calculate content panel height
        contentPanel.setPreferredSize(new java.awt.Dimension(
            panelsPerRow * (panelWidth + xGap) + xGap, 
            contentHeight
        ));
         // Add content panel to the scroll pane
        jScrollPane2.setViewportView(contentPanel);
    }
    
    private void showSecMarkerAssessmentInfo() {
        List<String> AssmntData = FileHandler.readFile("assessment.txt");
        Collections.reverse(AssmntData);
        boolean AssessmentFound = false;

        // Create a panel to hold all assessment panels
        contentPanel = new JPanel();
        contentPanel.setLayout(null); // Set null layout for absolute positioning

        // Constants for layout
        int panelWidth = 300;
        int panelHeight = 255;
        int xGap = 8;
        int yGap = 8;
        int panelsPerRow = 3;

        int x = xGap;
        int y = yGap;
        int count = 0;
        
        for (String line : AssmntData) {
            String[] AssmntList = line.split(";");
            if (user.getUserID().equals(AssmntList[5])) {
                AssmntID = AssmntList[0];
                intakeCode = AssmntList[2];
                AssessmentPanel = new JPanel();
                AssessmentPanel.setBackground(Color.WHITE);                
                AssessmentPanel.setPreferredSize(new java.awt.Dimension(panelWidth, panelHeight));
                AssessmentPanel.setBounds(x, y, panelWidth, panelHeight);
                AssessmentPanel.setLayout(null);
                
                AssessmentBackgroundPanel = new JPanel();
                bg = new JLabel();
                AssessmentNameLabel = new javax.swing.JLabel();

                switch (AssmntList[1]) {
                    case "internship_report" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/internship.png")));
                       
                        AssessmentNameLabel.setText("Internship Report");
                    }
                    case "fyp" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/final_year_project.png")));
                        
                        AssessmentNameLabel.setText("Final Year Project");
                    }
                    case "investigation" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/investigation_report.png")));

                        AssessmentNameLabel.setText("Investigation Report");
                    }
                    case "cp1" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/capstone_project.png")));
                        
                        AssessmentNameLabel.setText("Capstone Project 1");
                    }
                    case "cp2" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/capstone_project.png")));
                        
                        AssessmentNameLabel.setText("Capstone Project 2");
                    }
                    case "rmcp" -> {
                        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/research_methodology.png")));
                        
                        AssessmentNameLabel.setText("<html>" + "Research Methodology for Capstone Project" + "</html>");
                    }
                }
                
                AssessmentBackgroundPanel.setBounds(0, 0, panelWidth, 150);
                bg.setBounds(0, 0, panelWidth, 150);
                AssessmentBackgroundPanel.add(bg);
                AssessmentBackgroundPanel.setLayout(null);
                
                AssessmentNameLabel.setFont(new java.awt.Font("Bell MT", 1, 18));
                AssessmentNameLabel.setForeground(new java.awt.Color(2, 50, 99));
                AssessmentNameLabel.setBounds(10, 160, 250, 35);
                        
                IntakeCodeLabel = new javax.swing.JLabel();
                IntakeCodeLabel.setFont(new java.awt.Font("Bell MT", 1, 14)); 
                IntakeCodeLabel.setForeground(new java.awt.Color(2, 50, 99));
                IntakeCodeLabel.setBounds(10, 200, 182, 20);
                IntakeCodeLabel.setText(AssmntList[2]);

                AssessmentViewBtn = new javax.swing.JButton();
                AssessmentViewBtn.setBackground(new java.awt.Color(76, 127, 174));
                AssessmentViewBtn.setFont(new java.awt.Font("Bell MT", 1, 12)); 
                AssessmentViewBtn.setForeground(new java.awt.Color(255, 255, 255));
                AssessmentViewBtn.setText("View");
                AssessmentViewBtn.setBounds(230, 220, 60, 25);
                AssessmentViewBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                AssessmentViewBtn.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        redirectIntakePage(AssmntList[0],AssmntList[2],AssmntList[1]);
                    }
                });
                
                AssessmentPanel.add(AssessmentBackgroundPanel);
                AssessmentPanel.add(AssessmentNameLabel);
                AssessmentPanel.add(IntakeCodeLabel);
                AssessmentPanel.add(AssessmentViewBtn);
        
                contentPanel.add(AssessmentPanel);
                jPanel2.add(contentPanel);
                assessments.add(AssessmentPanel);
                AssessmentFound = true;
                
                count++;
                if (count % panelsPerRow == 0) {
                    x = xGap;
                    y += panelHeight + yGap;
                } else {
                    x += panelWidth + xGap;
                }
            }
        }
        if (!AssessmentFound) {
            JLabel noAssmntLabel = new JLabel("No Assessment Assigned");
            noAssmntLabel.setFont(new java.awt.Font("SansSerif", 1, 16));
            noAssmntLabel.setForeground(new java.awt.Color(2, 50, 99));

            contentPanel.setLayout(new GridBagLayout());
            GridBagConstraints gbc = new GridBagConstraints();

            gbc.gridx = 0;
            gbc.gridy = 0;
            gbc.gridwidth = GridBagConstraints.REMAINDER;
            gbc.gridheight = GridBagConstraints.REMAINDER;
            gbc.weightx = 1.0;
            gbc.weighty = 1.0;
            gbc.anchor = GridBagConstraints.CENTER;
            gbc.insets = new Insets(0, 0, 0, 0);

            contentPanel.add(noAssmntLabel, gbc);
        }

        
        // Set preferred size for the content panel based on the number of items
        contentPanel.setPreferredSize(new java.awt.Dimension(
            panelsPerRow * (panelWidth + xGap) + xGap, 
            (count / panelsPerRow + 1) * (panelHeight + yGap) + yGap
        ));
         // Add content panel to the scroll pane 
        jScrollPane2.setViewportView(contentPanel);
    }
    
    private void clearPanel(){
        jPanel2.removeAll();
        jPanel2.revalidate(); // Revalidate to refresh the layout
        jPanel2.repaint();    // Repaint to update the UI
    }
    
    private void redirectIntakePage(String assessmentID, String intakeCode, String assessmentType){
        LecturerIntakePage intake = new LecturerIntakePage(assessmentID,intakeCode,assessmentType);
        intake.setVisible(true);
        this.setVisible(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LecLogOutLabel;
    private javax.swing.JLabel NotiLabel;
    private javax.swing.JLabel ProfileLabel;
    private javax.swing.JLabel SumRptLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel secMarkerLabel;
    private javax.swing.JLabel supervisorLabel;
    // End of variables declaration//GEN-END:variables
}
