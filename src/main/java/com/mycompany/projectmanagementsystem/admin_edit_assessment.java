/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projectmanagementsystem;

import com.mycompany.projectmanagementsystem.Assessment.AssessmentController;
import com.mycompany.projectmanagementsystem.GeneralFunction.FileHandler;
import java.awt.Toolkit;
import java.util.List;

/**
 *
 * @author ASUS
 */
public class admin_edit_assessment extends javax.swing.JFrame {

    String assessmentNameInList;

    /**
     * Creates new form admin_edit_assessment
     */
    public admin_edit_assessment() {
        initComponents();
        setIconImage();
    }

    public String displayAssessmentDetails(String assessmentName) {
        List<String> data = FileHandler.readFile("assessment_type.txt");

        for (String line : data) {
            if (line.startsWith(assessmentName.toLowerCase())) {
                System.out.println(assessmentName);
                String[] assessment = line.split(";");

                AssessmentController getAssessmentName = new AssessmentController();
                String assessmentNameWithSpace = getAssessmentName.assessmentType(assessmentName);

                assessment_name.setText(assessmentNameWithSpace);
                contentmark.setValue(Integer.parseInt(assessment[1]));
                formatmark.setValue(Integer.parseInt(assessment[2]));
                presentationmark.setValue(Integer.parseInt(assessment[3]));
                failmark.setValue(Integer.parseInt(assessment[6]));

                passwithchanges.setText(assessment[5]);
                passmark.setValue(Integer.parseInt(assessment[4]));

            }
        }

        assessmentNameInList = assessmentName;
        return assessmentNameInList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assessment_name_title = new javax.swing.JLabel();
        assessment_name = new javax.swing.JTextField();
        presentationmark = new javax.swing.JSpinner();
        presentation_mark_title = new javax.swing.JLabel();
        format_mark_title = new javax.swing.JLabel();
        formatmark = new javax.swing.JSpinner();
        fail_mark_title = new javax.swing.JLabel();
        failmark = new javax.swing.JSpinner();
        passwithchanges_mark_title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        passwithchanges = new javax.swing.JTextPane();
        pass_mark_title = new javax.swing.JLabel();
        passmark = new javax.swing.JSpinner();
        content_mark_title = new javax.swing.JLabel();
        contentmark = new javax.swing.JSpinner();
        changeswithpass_checkbox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        backbutton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Admin: Edit Assessment Mark");
        setMaximumSize(new java.awt.Dimension(500, 420));
        setMinimumSize(new java.awt.Dimension(500, 420));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        assessment_name_title.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        assessment_name_title.setForeground(new java.awt.Color(2, 50, 99));
        assessment_name_title.setText("Assessment Name");
        getContentPane().add(assessment_name_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        assessment_name.setEditable(false);
        assessment_name.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        assessment_name.setForeground(new java.awt.Color(2, 50, 99));
        getContentPane().add(assessment_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 250, 40));

        presentationmark.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        presentationmark.setAutoscrolls(true);
        getContentPane().add(presentationmark, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 120, -1));

        presentation_mark_title.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        presentation_mark_title.setForeground(new java.awt.Color(2, 50, 99));
        presentation_mark_title.setText("Presentation Mark");
        getContentPane().add(presentation_mark_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        format_mark_title.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        format_mark_title.setForeground(new java.awt.Color(2, 50, 99));
        format_mark_title.setText("Format Mark");
        getContentPane().add(format_mark_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        formatmark.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        formatmark.setAutoscrolls(true);
        getContentPane().add(formatmark, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 120, -1));

        fail_mark_title.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        fail_mark_title.setForeground(new java.awt.Color(2, 50, 99));
        fail_mark_title.setText("Fail Mark");
        getContentPane().add(fail_mark_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));

        failmark.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        failmark.setAutoscrolls(true);
        getContentPane().add(failmark, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 120, -1));

        passwithchanges_mark_title.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        passwithchanges_mark_title.setForeground(new java.awt.Color(2, 50, 99));
        passwithchanges_mark_title.setText("Pass With Changes Mark");
        getContentPane().add(passwithchanges_mark_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, -1, 30));

        passwithchanges.setEditable(false);
        jScrollPane1.setViewportView(passwithchanges);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, 120, 30));

        pass_mark_title.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        pass_mark_title.setForeground(new java.awt.Color(2, 50, 99));
        pass_mark_title.setText("Pass Mark");
        getContentPane().add(pass_mark_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, -1, -1));

        passmark.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        passmark.setAutoscrolls(true);
        getContentPane().add(passmark, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 120, -1));

        content_mark_title.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        content_mark_title.setForeground(new java.awt.Color(2, 50, 99));
        content_mark_title.setText("Content Mark");
        getContentPane().add(content_mark_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        contentmark.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        contentmark.setAutoscrolls(true);
        getContentPane().add(contentmark, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 120, -1));

        changeswithpass_checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeswithpass_checkboxActionPerformed(evt);
            }
        });
        getContentPane().add(changeswithpass_checkbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, -1, -1));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(2, 50, 99));
        jLabel1.setText("<html>Do not apply \"Pass With Changes\" in this module.</html>");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 230, -1));

        backbutton.setBackground(new java.awt.Color(2, 50, 99));
        backbutton.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N
        backbutton.setForeground(new java.awt.Color(255, 255, 255));
        backbutton.setText("BACK");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(backbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, -1, -1));

        updatebutton.setBackground(new java.awt.Color(2, 50, 99));
        updatebutton.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N
        updatebutton.setForeground(new java.awt.Color(255, 255, 255));
        updatebutton.setText("UPDATE");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });
        getContentPane().add(updatebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_background.png"))); // NOI18N
        background.setMaximumSize(new java.awt.Dimension(500, 420));
        background.setMinimumSize(new java.awt.Dimension(500, 420));
        background.setPreferredSize(new java.awt.Dimension(500, 420));
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebuttonActionPerformed
        String[] updatedMarks = new String[8];

        updatedMarks[0] = assessment_name.getText();
        updatedMarks[1] = contentmark.getValue().toString();
        updatedMarks[2] = formatmark.getValue().toString();
        updatedMarks[3] = presentationmark.getValue().toString();
        updatedMarks[4] = passmark.getValue().toString();
        updatedMarks[6] = failmark.getValue().toString();
        if (changeswithpass_checkbox.isSelected()) {
            passwithchanges.setText("0");
            updatedMarks[5] = "0";
        } else {
            int passwithchangesMin = Integer.parseInt(updatedMarks[6]) + 1;
            int passwithchangesMax = Integer.parseInt(updatedMarks[4]) - 1;
            String passwithchangerange = String.valueOf(passwithchangesMin) + "-" + String.valueOf(passwithchangesMax);
            passwithchanges.setText(passwithchangerange);
            updatedMarks[5] = passwithchangerange;
        }

        updatedMarks[7] = assessmentNameInList;

        AssessmentController modifymark = new AssessmentController();
        modifymark.adminEditMark(updatedMarks);

    }//GEN-LAST:event_updatebuttonActionPerformed

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        dispose();
    }//GEN-LAST:event_backbuttonActionPerformed

    private void changeswithpass_checkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeswithpass_checkboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeswithpass_checkboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_edit_assessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_edit_assessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_edit_assessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_edit_assessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_edit_assessment().setVisible(true);
            }
        });
    }
    
    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Sysco_icon_with_background.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField assessment_name;
    private javax.swing.JLabel assessment_name_title;
    private javax.swing.JButton backbutton;
    private javax.swing.JLabel background;
    private javax.swing.JCheckBox changeswithpass_checkbox;
    private javax.swing.JLabel content_mark_title;
    private javax.swing.JSpinner contentmark;
    private javax.swing.JLabel fail_mark_title;
    private javax.swing.JSpinner failmark;
    private javax.swing.JLabel format_mark_title;
    private javax.swing.JSpinner formatmark;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pass_mark_title;
    private javax.swing.JSpinner passmark;
    private javax.swing.JTextPane passwithchanges;
    private javax.swing.JLabel passwithchanges_mark_title;
    private javax.swing.JLabel presentation_mark_title;
    private javax.swing.JSpinner presentationmark;
    private javax.swing.JButton updatebutton;
    // End of variables declaration//GEN-END:variables
}
