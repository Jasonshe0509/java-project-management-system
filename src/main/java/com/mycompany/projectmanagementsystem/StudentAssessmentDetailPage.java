/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projectmanagementsystem;

import com.mycompany.projectmanagementsystem.Assessment.AssessmentController;
import com.mycompany.projectmanagementsystem.Communication.CommunicationController;
import com.mycompany.projectmanagementsystem.GeneralFunction.FileHandler;
import com.mycompany.projectmanagementsystem.GeneralFunction.SessionManager;
import com.mycompany.projectmanagementsystem.Presentation.PresentationController;
import com.mycompany.projectmanagementsystem.Presentation.StudentPresentationTableActionEvent;
import com.mycompany.projectmanagementsystem.User.User;
import com.mycompany.projectmanagementsystem.User.UserController;
import java.awt.Toolkit;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.LayoutStyle;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ASUS
 */
public class StudentAssessmentDetailPage extends javax.swing.JFrame {

    /**
     * Creates new form StudentAssessmentDetailPage
     */
    private String assessmentType;
    private String assessmentID;
    private final SessionManager sessionManager = SessionManager.getInstance();
    User user = sessionManager.getCurrentUser();
    AssessmentController action = new AssessmentController();
    private JPanel communicationPanel;
    private JLabel subject;
    private JButton openComBtn;
    private JButton deleteComButton;
    private JLabel channelDate;
    private JLabel communicationIcon;

    private JPanel communicationReplyPanel;
    private JLabel resubjectLabel;
    private JLabel replyMessage;
    private JLabel replyName;
    private JLabel replyDate;
    private JLabel deleteReply;

    public StudentAssessmentDetailPage(String assessmentID, String assessmentType) {
        initComponents();
        setIconImage();
        this.assessmentType = assessmentType;
        this.assessmentID = assessmentID;
        assessment.setText(action.assessmentType(assessmentType));
        setAssessmentDetailsData();
        detailButtonSelection();
        showPresentationPage();
        readPresentationRequestFromFile();
        showPresentationRequestButton();
        showPresentationConfirmationDetails();
        showCreateDiscussionBtn();
        readFromCommunicationChannel();
        readUserFromFile();
        liveSearch();
        int index1 = jTabbedPane1.indexOfComponent(replyCommunicationScrollPanel);
        jTabbedPane1.removeTabAt(index1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        assessmentStatus = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        dueDate = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        submissionLink = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lastModified = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        gradeStatus = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        feedback = new javax.swing.JTextArea();
        submitBtn = new javax.swing.JButton();
        modifyBtn = new javax.swing.JButton();
        resubmitBtn = new javax.swing.JButton();
        presentationPanel = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        presentationRequestTable = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        requestButton = new javax.swing.JButton();
        confirmPresentationPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        persentationDate = new javax.swing.JLabel();
        supervisorName = new javax.swing.JLabel();
        presentationFeedback = new javax.swing.JLabel();
        secondMarkerName = new javax.swing.JLabel();
        presentationStatus = new javax.swing.JLabel();
        communicationScrollPanel = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        replyCommunicationScrollPanel = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        createdMessage = new javax.swing.JLabel();
        createdDate = new javax.swing.JLabel();
        createdName = new javax.swing.JLabel();
        reply = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        backIcon = new javax.swing.JLabel();
        selectedSubject = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        roleComboBox = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        peopleTable = new javax.swing.JTable();
        studentHeader = new javax.swing.JPanel();
        studentLogo = new javax.swing.JLabel();
        studentEcSubmission = new javax.swing.JLabel();
        studentNotification = new javax.swing.JLabel();
        studentProfile = new javax.swing.JLabel();
        studentLogout = new javax.swing.JLabel();
        assessment = new javax.swing.JLabel();
        createDiscussionBtn = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Assessment Details");
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new Color(217,217,217,40));
        jTabbedPane1.setForeground(new java.awt.Color(2, 50, 99));
        jTabbedPane1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(920, 550));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(920, 550));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(920, 550));
        jTabbedPane1.setRequestFocusEnabled(false);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(217, 217, 217));
        jPanel3.setMaximumSize(new java.awt.Dimension(840, 400));
        jPanel3.setMinimumSize(new java.awt.Dimension(840, 400));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setMaximumSize(new java.awt.Dimension(836, 60));
        jPanel4.setMinimumSize(new java.awt.Dimension(836, 60));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(2, 50, 99));
        jLabel8.setText("Assessment Status");

        assessmentStatus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        assessmentStatus.setForeground(new java.awt.Color(255, 255, 255));
        assessmentStatus.setText("Status");
        assessmentStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        assessmentStatus.setMaximumSize(new java.awt.Dimension(87, 26));
        assessmentStatus.setMinimumSize(new java.awt.Dimension(87, 26));
        assessmentStatus.setPreferredSize(new java.awt.Dimension(87, 26));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(assessmentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(360, 360, 360))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(assessmentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setMaximumSize(new java.awt.Dimension(836, 60));
        jPanel5.setMinimumSize(new java.awt.Dimension(836, 60));

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(2, 50, 99));
        jLabel9.setText("Due Date");

        dueDate.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        dueDate.setForeground(new java.awt.Color(2, 50, 99));
        dueDate.setMaximumSize(new java.awt.Dimension(330, 26));
        dueDate.setMinimumSize(new java.awt.Dimension(330, 26));
        dueDate.setPreferredSize(new java.awt.Dimension(330, 26));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel9)
                .addGap(218, 218, 218)
                .addComponent(dueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(dueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setMaximumSize(new java.awt.Dimension(836, 60));
        jPanel6.setMinimumSize(new java.awt.Dimension(836, 60));

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(2, 50, 99));
        jLabel10.setText("Submission Link");

        submissionLink.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        submissionLink.setForeground(new java.awt.Color(2, 50, 99));
        submissionLink.setMaximumSize(new java.awt.Dimension(330, 26));
        submissionLink.setMinimumSize(new java.awt.Dimension(330, 26));
        submissionLink.setPreferredSize(new java.awt.Dimension(330, 26));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submissionLink, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submissionLink, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.setMaximumSize(new java.awt.Dimension(836, 60));
        jPanel8.setMinimumSize(new java.awt.Dimension(836, 60));

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(2, 50, 99));
        jLabel11.setText("Last Modified");

        lastModified.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        lastModified.setForeground(new java.awt.Color(2, 50, 99));
        lastModified.setMaximumSize(new java.awt.Dimension(330, 26));
        lastModified.setMinimumSize(new java.awt.Dimension(330, 26));
        lastModified.setPreferredSize(new java.awt.Dimension(330, 26));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lastModified, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastModified, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.setMaximumSize(new java.awt.Dimension(836, 60));
        jPanel9.setMinimumSize(new java.awt.Dimension(836, 60));

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(2, 50, 99));
        jLabel12.setText("Grade Status");

        gradeStatus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        gradeStatus.setForeground(new java.awt.Color(255, 255, 255));
        gradeStatus.setText("Status");
        gradeStatus.setMaximumSize(new java.awt.Dimension(87, 26));
        gradeStatus.setMinimumSize(new java.awt.Dimension(87, 26));
        gradeStatus.setPreferredSize(new java.awt.Dimension(87, 26));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel12)
                .addGap(180, 180, 180)
                .addComponent(gradeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gradeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.setMaximumSize(new java.awt.Dimension(836, 60));
        jPanel10.setMinimumSize(new java.awt.Dimension(836, 60));

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(2, 50, 99));
        jLabel13.setText("Feedback");

        feedback.setEditable(false);
        feedback.setColumns(20);
        feedback.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        feedback.setForeground(new java.awt.Color(2, 50, 99));
        feedback.setRows(5);
        jScrollPane4.setViewportView(feedback);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel13)
                .addGap(206, 206, 206)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel13)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 33, -1, -1));

        submitBtn.setBackground(new java.awt.Color(27, 61, 96));
        submitBtn.setFont(new java.awt.Font("Bell MT", 1, 28)); // NOI18N
        submitBtn.setForeground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("Submit");
        submitBtn.setMaximumSize(new java.awt.Dimension(120, 45));
        submitBtn.setMinimumSize(new java.awt.Dimension(120, 45));
        submitBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        jPanel2.add(submitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, -1, -1));

        modifyBtn.setBackground(new java.awt.Color(27, 61, 96));
        modifyBtn.setFont(new java.awt.Font("Bell MT", 1, 28)); // NOI18N
        modifyBtn.setForeground(new java.awt.Color(255, 255, 255));
        modifyBtn.setText("Modify");
        modifyBtn.setMaximumSize(new java.awt.Dimension(120, 45));
        modifyBtn.setMinimumSize(new java.awt.Dimension(120, 45));
        modifyBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        modifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBtnActionPerformed(evt);
            }
        });
        jPanel2.add(modifyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, -1, -1));

        resubmitBtn.setBackground(new java.awt.Color(27, 61, 96));
        resubmitBtn.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N
        resubmitBtn.setForeground(new java.awt.Color(255, 255, 255));
        resubmitBtn.setText("Resubmit");
        resubmitBtn.setMaximumSize(new java.awt.Dimension(120, 45));
        resubmitBtn.setMinimumSize(new java.awt.Dimension(120, 45));
        resubmitBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        resubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resubmitBtnActionPerformed(evt);
            }
        });
        jPanel2.add(resubmitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, -1, -1));

        jTabbedPane1.addTab("Details", jPanel2);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        presentationRequestTable.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        presentationRequestTable.setForeground(new java.awt.Color(2, 50, 99));
        presentationRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Presentation Slot", "Supervisor Status", "Second Marker Status", "Request Status", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        presentationRequestTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presentationRequestTable.setGridColor(new java.awt.Color(0, 0, 0));
        presentationRequestTable.setRowHeight(30);
        presentationRequestTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        presentationRequestTable.setSelectionForeground(new java.awt.Color(2, 50, 99));
        presentationRequestTable.setShowGrid(false);
        presentationRequestTable.setShowHorizontalLines(true);
        presentationRequestTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(presentationRequestTable);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );

        jLabel20.setFont(new java.awt.Font("Bell MT", 1, 22)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(2, 50, 99));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Presentation Request");

        requestButton.setBackground(new java.awt.Color(27, 61, 96));
        requestButton.setFont(new java.awt.Font("Bell MT", 1, 28)); // NOI18N
        requestButton.setForeground(new java.awt.Color(255, 255, 255));
        requestButton.setText("Request");
        requestButton.setMaximumSize(new java.awt.Dimension(120, 45));
        requestButton.setMinimumSize(new java.awt.Dimension(120, 45));
        requestButton.setPreferredSize(new java.awt.Dimension(120, 45));
        requestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout presentationPanelLayout = new javax.swing.GroupLayout(presentationPanel);
        presentationPanel.setLayout(presentationPanelLayout);
        presentationPanelLayout.setHorizontalGroup(
            presentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, presentationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(requestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(378, 378, 378))
        );
        presentationPanelLayout.setVerticalGroup(
            presentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(presentationPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(requestButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Presentation", presentationPanel);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation_background.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(260, 480));
        jLabel1.setMinimumSize(new java.awt.Dimension(260, 480));
        jLabel1.setPreferredSize(new java.awt.Dimension(260, 480));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(2, 50, 99));
        jLabel7.setText("Second Marker:");
        jLabel7.setMaximumSize(new java.awt.Dimension(275, 47));
        jLabel7.setMinimumSize(new java.awt.Dimension(275, 47));
        jLabel7.setPreferredSize(new java.awt.Dimension(275, 47));

        jLabel22.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(2, 50, 99));
        jLabel22.setText("Supervisor:");
        jLabel22.setMaximumSize(new java.awt.Dimension(275, 47));
        jLabel22.setMinimumSize(new java.awt.Dimension(275, 47));
        jLabel22.setPreferredSize(new java.awt.Dimension(275, 47));

        jLabel25.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(2, 50, 99));
        jLabel25.setText("Presentation Date:");
        jLabel25.setMaximumSize(new java.awt.Dimension(275, 47));
        jLabel25.setMinimumSize(new java.awt.Dimension(275, 47));
        jLabel25.setPreferredSize(new java.awt.Dimension(275, 47));

        jLabel26.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(2, 50, 99));
        jLabel26.setText("Status:");
        jLabel26.setMaximumSize(new java.awt.Dimension(275, 47));
        jLabel26.setMinimumSize(new java.awt.Dimension(275, 47));
        jLabel26.setPreferredSize(new java.awt.Dimension(275, 47));

        jLabel27.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(2, 50, 99));
        jLabel27.setText("Feedback:");
        jLabel27.setMaximumSize(new java.awt.Dimension(275, 47));
        jLabel27.setMinimumSize(new java.awt.Dimension(275, 47));
        jLabel27.setPreferredSize(new java.awt.Dimension(275, 47));

        persentationDate.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        persentationDate.setForeground(new java.awt.Color(2, 50, 99));
        persentationDate.setText("jLabel4");
        persentationDate.setMaximumSize(new java.awt.Dimension(187, 40));
        persentationDate.setMinimumSize(new java.awt.Dimension(187, 40));
        persentationDate.setPreferredSize(new java.awt.Dimension(187, 40));

        supervisorName.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        supervisorName.setForeground(new java.awt.Color(2, 50, 99));
        supervisorName.setText("jLabel4");
        supervisorName.setMaximumSize(new java.awt.Dimension(187, 40));
        supervisorName.setMinimumSize(new java.awt.Dimension(187, 40));
        supervisorName.setPreferredSize(new java.awt.Dimension(187, 40));

        presentationFeedback.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        presentationFeedback.setForeground(new java.awt.Color(2, 50, 99));
        presentationFeedback.setText("jLabel4");
        presentationFeedback.setMaximumSize(new java.awt.Dimension(187, 40));
        presentationFeedback.setMinimumSize(new java.awt.Dimension(187, 40));
        presentationFeedback.setPreferredSize(new java.awt.Dimension(187, 40));

        secondMarkerName.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        secondMarkerName.setForeground(new java.awt.Color(2, 50, 99));
        secondMarkerName.setText("jLabel4");
        secondMarkerName.setMaximumSize(new java.awt.Dimension(187, 40));
        secondMarkerName.setMinimumSize(new java.awt.Dimension(187, 40));
        secondMarkerName.setPreferredSize(new java.awt.Dimension(187, 40));

        presentationStatus.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        presentationStatus.setForeground(new java.awt.Color(255, 255, 255));
        presentationStatus.setText("jLabel4");
        presentationStatus.setMaximumSize(new java.awt.Dimension(187, 40));
        presentationStatus.setMinimumSize(new java.awt.Dimension(187, 40));
        presentationStatus.setPreferredSize(new java.awt.Dimension(187, 40));

        javax.swing.GroupLayout confirmPresentationPanelLayout = new javax.swing.GroupLayout(confirmPresentationPanel);
        confirmPresentationPanel.setLayout(confirmPresentationPanelLayout);
        confirmPresentationPanelLayout.setHorizontalGroup(
            confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(presentationFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                        .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(persentationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, confirmPresentationPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(secondMarkerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(presentationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(supervisorName, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                    .addGap(307, 307, 307)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(426, Short.MAX_VALUE)))
        );
        confirmPresentationPanelLayout.setVerticalGroup(
            confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(supervisorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secondMarkerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(persentationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(presentationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(presentationFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(confirmPresentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(confirmPresentationPanelLayout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(433, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Presentation", confirmPresentationPanel);

        communicationScrollPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1008, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 879, Short.MAX_VALUE)
        );

        communicationScrollPanel.setViewportView(jPanel12);

        jTabbedPane1.addTab("Communication", communicationScrollPanel);

        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel17.setMaximumSize(new java.awt.Dimension(820, 140));
        jPanel17.setMinimumSize(new java.awt.Dimension(820, 140));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/profile_icon.png"))); // NOI18N

        createdMessage.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        createdMessage.setForeground(new java.awt.Color(2, 50, 99));
        createdMessage.setText("Message");

        createdDate.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        createdDate.setForeground(new java.awt.Color(2, 50, 99));
        createdDate.setText("Date");

        createdName.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        createdName.setForeground(new java.awt.Color(2, 50, 99));
        createdName.setText("Name");

        reply.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        reply.setForeground(new java.awt.Color(2, 50, 99));
        reply.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reply.setText("Reply");
        reply.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(createdName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(89, 89, 89)
                        .addComponent(createdDate, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(createdMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(107, Short.MAX_VALUE))))
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                    .addContainerGap(745, Short.MAX_VALUE)
                    .addComponent(reply, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createdDate)
                            .addComponent(createdName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createdMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(reply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(16, 16, 16)))
        );

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chat1.png"))); // NOI18N
        jLabel31.setText("jLabel29");

        backIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back.png"))); // NOI18N
        backIcon.setText("jLabel4");
        backIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backIcon.setMaximumSize(new java.awt.Dimension(50, 40));
        backIcon.setMinimumSize(new java.awt.Dimension(50, 40));
        backIcon.setPreferredSize(new java.awt.Dimension(50, 40));
        backIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backIconMouseClicked(evt);
            }
        });

        selectedSubject.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        selectedSubject.setForeground(new java.awt.Color(2, 50, 99));
        selectedSubject.setText("Subject");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(backIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectedSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(backIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectedSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(821, Short.MAX_VALUE))
        );

        replyCommunicationScrollPanel.setViewportView(jPanel13);

        jTabbedPane1.addTab("Communication", replyCommunicationScrollPanel);

        search.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        search.setForeground(new java.awt.Color(2, 50, 99));
        search.setMaximumSize(new java.awt.Dimension(335, 40));
        search.setMinimumSize(new java.awt.Dimension(335, 40));
        search.setPreferredSize(new java.awt.Dimension(335, 40));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        roleComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        roleComboBox.setForeground(new java.awt.Color(2, 50, 99));
        roleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "student", "supervisor", "second marker" }));
        roleComboBox.setMaximumSize(new java.awt.Dimension(335, 40));
        roleComboBox.setMinimumSize(new java.awt.Dimension(335, 40));
        roleComboBox.setPreferredSize(new java.awt.Dimension(335, 40));
        roleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboBoxActionPerformed(evt);
            }
        });

        peopleTable.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        peopleTable.setForeground(new java.awt.Color(2, 50, 99));
        peopleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Role"
            }
        ));
        peopleTable.setRowHeight(30);
        jScrollPane5.setViewportView(peopleTable);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 922, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("People", jPanel1);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        studentHeader.setBackground(new Color(255, 255, 255, 90));
        studentHeader.setToolTipText("");
        studentHeader.setMaximumSize(new java.awt.Dimension(1000, 73));
        studentHeader.setMinimumSize(new java.awt.Dimension(1000, 73));

        studentLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sysco_logo.png"))); // NOI18N
        studentLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        studentLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentLogoMouseClicked(evt);
            }
        });

        studentEcSubmission.setBackground(new Color(255, 255, 255, 0));
        studentEcSubmission.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        studentEcSubmission.setForeground(new java.awt.Color(2, 50, 99));
        studentEcSubmission.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentEcSubmission.setText("EC Submission");
        studentEcSubmission.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        studentEcSubmission.setMaximumSize(new java.awt.Dimension(96, 73));
        studentEcSubmission.setMinimumSize(new java.awt.Dimension(96, 73));
        studentEcSubmission.setPreferredSize(new java.awt.Dimension(96, 73));
        studentEcSubmission.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentEcSubmissionMouseClicked(evt);
            }
        });

        studentNotification.setBackground(new Color(255, 255, 255, 0));
        studentNotification.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        studentNotification.setForeground(new java.awt.Color(2, 50, 99));
        studentNotification.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentNotification.setText("Notification");
        studentNotification.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        studentNotification.setMaximumSize(new java.awt.Dimension(96, 73));
        studentNotification.setMinimumSize(new java.awt.Dimension(96, 73));
        studentNotification.setPreferredSize(new java.awt.Dimension(96, 73));
        studentNotification.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentNotificationMouseClicked(evt);
            }
        });

        studentProfile.setBackground(new Color(255, 255, 255, 0));
        studentProfile.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        studentProfile.setForeground(new java.awt.Color(2, 50, 99));
        studentProfile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentProfile.setText("Profile");
        studentProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        studentProfile.setMaximumSize(new java.awt.Dimension(96, 73));
        studentProfile.setMinimumSize(new java.awt.Dimension(96, 73));
        studentProfile.setPreferredSize(new java.awt.Dimension(96, 73));
        studentProfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentProfileMouseClicked(evt);
            }
        });

        studentLogout.setBackground(new Color(255, 255, 255, 0));
        studentLogout.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        studentLogout.setForeground(new java.awt.Color(2, 50, 99));
        studentLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentLogout.setText("Log Out");
        studentLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        studentLogout.setMaximumSize(new java.awt.Dimension(96, 73));
        studentLogout.setMinimumSize(new java.awt.Dimension(96, 73));
        studentLogout.setPreferredSize(new java.awt.Dimension(96, 73));
        studentLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentLogoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout studentHeaderLayout = new javax.swing.GroupLayout(studentHeader);
        studentHeader.setLayout(studentHeaderLayout);
        studentHeaderLayout.setHorizontalGroup(
            studentHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 352, Short.MAX_VALUE)
                .addComponent(studentEcSubmission, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(studentNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentLogout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        studentHeaderLayout.setVerticalGroup(
            studentHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentHeaderLayout.createSequentialGroup()
                .addGroup(studentHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNotification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentEcSubmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(studentHeaderLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(studentLogo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(studentHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        assessment.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        assessment.setForeground(new java.awt.Color(2, 50, 99));
        assessment.setText("Report");
        getContentPane().add(assessment, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 670, 30));

        createDiscussionBtn.setBackground(new java.awt.Color(76, 127, 174));
        createDiscussionBtn.setFont(new java.awt.Font("Bell MT", 1, 12)); // NOI18N
        createDiscussionBtn.setForeground(new java.awt.Color(255, 255, 255));
        createDiscussionBtn.setText("Create Discussion");
        createDiscussionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDiscussionBtnActionPerformed(evt);
            }
        });
        getContentPane().add(createDiscussionBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 90, 130, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_background.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void studentLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentLogoMouseClicked
        StudentDashboardPage dashboard = new StudentDashboardPage();
        dashboard.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_studentLogoMouseClicked

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        StudentSubmissionPage submission = new StudentSubmissionPage("submit", assessmentID, assessmentType, this);
        submission.setVisible(true);
    }//GEN-LAST:event_submitBtnActionPerformed

    private void requestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestButtonActionPerformed
        StudentPresentationRequestPage requestPage = new StudentPresentationRequestPage(assessmentID, assessmentType, this);
        requestPage.setVisible(true);
    }//GEN-LAST:event_requestButtonActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void studentEcSubmissionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentEcSubmissionMouseClicked
        StudentEcSubmissionPage ecPage = new StudentEcSubmissionPage();
        ecPage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_studentEcSubmissionMouseClicked

    private void studentNotificationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentNotificationMouseClicked
        NotificationPage notification = new NotificationPage();
        notification.setVisible(true);
    }//GEN-LAST:event_studentNotificationMouseClicked

    private void studentProfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentProfileMouseClicked
        StudentProfilePage profile = new StudentProfilePage();
        profile.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_studentProfileMouseClicked

    private void studentLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentLogoutMouseClicked
        this.setVisible(false);
        UserController userAction = new UserController();
        userAction.userLogout();
    }//GEN-LAST:event_studentLogoutMouseClicked

    private void modifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBtnActionPerformed
        StudentSubmissionPage submission = new StudentSubmissionPage("modify", assessmentID, assessmentType, this);
        submission.setVisible(true);
    }//GEN-LAST:event_modifyBtnActionPerformed

    private void resubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resubmitBtnActionPerformed
        StudentSubmissionPage submission = new StudentSubmissionPage("resubmit", assessmentID, assessmentType, this);
        submission.setVisible(true);
    }//GEN-LAST:event_resubmitBtnActionPerformed

    private void createDiscussionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDiscussionBtnActionPerformed
        CreateNewMessagePage messagePage = new CreateNewMessagePage(assessmentID, assessmentType, null, null, this, null);
        messagePage.setVisible(true);
    }//GEN-LAST:event_createDiscussionBtnActionPerformed

    private void backIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backIconMouseClicked
        Component[] components = jPanel13.getComponents();
        for (Component component : components) {
            if (component instanceof JPanel) {
                jPanel13.remove(component);
            }
        }
        jPanel13.add(jPanel7);
        jPanel13.add(jPanel17);
        jPanel13.revalidate();
        jPanel13.repaint();

        int index = jTabbedPane1.indexOfComponent(replyCommunicationScrollPanel);
        jTabbedPane1.removeTabAt(index);
        jTabbedPane1.insertTab("Communication", null, communicationScrollPanel, null, index);
        jTabbedPane1.setSelectedComponent(communicationScrollPanel);
    }//GEN-LAST:event_backIconMouseClicked

    private void roleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAssessmentDetailPage("A0001", "internship_report").setVisible(true);
            }
        });
    }

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Sysco_icon_with_background.png")));
    }

    private void setAssessmentDetailsData() {
        List<String> data = FileHandler.readFile("student_assessment.txt");
        assessmentStatus.setOpaque(true); // Make the label opaque
        assessmentStatus.setHorizontalAlignment(SwingConstants.CENTER); // Center the text
        gradeStatus.setOpaque(true); // Make the label opaque
        gradeStatus.setHorizontalAlignment(SwingConstants.CENTER); // Center the text
        for (String line : data) {
            String[] list = line.split(";");
            if (list[2].equals(assessmentID)) {
                switch (list[6]) {
                    case "pending" -> {
                        assessmentStatus.setText("Pending");
                        assessmentStatus.setBackground(new Color(0xE3AC41)); // Set the background color
                    }
                    case "submitted" -> {
                        assessmentStatus.setText("Submitted");
                        assessmentStatus.setBackground(new Color(0x1B3D60)); // Set the background color
                    }
                    case "partially marked" -> {
                        assessmentStatus.setText("Partially Marked");
                        assessmentStatus.setBackground(new Color(0x1B6047)); // Set the background color
                    }
                    case "marked" -> {
                        assessmentStatus.setText("Marked");
                        assessmentStatus.setBackground(new Color(0x1B6047)); // Set the background color
                    }
                }
                dueDate.setText(list[3]);
                if (list[4] == null || list[4].trim().isEmpty()) {
                    submissionLink.setText("-");
                } else {
                    submissionLink.setText("<html><a href=''>" + list[4] + "</a></html>"); // Display as a hyperlink
                    submissionLink.setForeground(Color.BLUE); // Optional: Set link color
                    submissionLink.setCursor(new Cursor(Cursor.HAND_CURSOR)); // Change cursor to hand

                    submissionLink.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            if (Desktop.isDesktopSupported()) {
                                try {
                                    Desktop.getDesktop().browse(new URI(list[4]));
                                } catch (IOException | URISyntaxException ex) {
                                    ex.printStackTrace();
                                }
                            }
                        }
                    });
                }
                if (list[5] == null || list[4].trim().isEmpty()) {
                    lastModified.setText("-");
                } else {
                    lastModified.setText(list[5]);
                }

                switch (list[8]) {
                    case "pass" -> {
                        gradeStatus.setText("Pass");
                        gradeStatus.setBackground(new Color(0x1B6047)); // Set the background color
                    }
                    case "pass_with_changes" -> {
                        gradeStatus.setText("Pass With Changes");
                        gradeStatus.setBackground(new Color(0xE3AC41)); // Set the background color
                    }
                    case "fail" -> {
                        gradeStatus.setText("Marked");
                        gradeStatus.setBackground(new Color(0xE34141)); // Set the background color
                    }
                    default -> {
                        gradeStatus.setVisible(false);
                    }
                }

                if (list[7] == null || list[4].trim().isEmpty()) {
                    feedback.setText("-");
                } else {
                    feedback.setText(list[7]);
                }
            }

        }
    }

    private void detailButtonSelection() {
        List<String> data = FileHandler.readFile("student_assessment.txt");
        for (String line : data) {
            String[] list = line.split(";");
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            // Parse the due date from list[3]
            LocalDate dueDate = LocalDate.parse(list[3], formatter);
            int submissionCount = Integer.parseInt(list[11]);

            // Get the current local date
            LocalDate currentDate = LocalDate.now();
            if (list[2].equals(assessmentID)) {
                if (list[6].equals("pending") && !currentDate.isAfter(dueDate)) {
                    submitBtn.setVisible(true);
                    modifyBtn.setVisible(false);
                    resubmitBtn.setVisible(false);
                } else if (list[6].equals("submitted") && !currentDate.isAfter(dueDate) && submissionCount == 0) {
                    submitBtn.setVisible(false);
                    modifyBtn.setVisible(true);
                    resubmitBtn.setVisible(false);
                } else if (list[8].equals("pass_with_changes") && !currentDate.isAfter(dueDate) && submissionCount == 0) {
                    submitBtn.setVisible(false);
                    modifyBtn.setVisible(false);
                    resubmitBtn.setVisible(true);
                } else if (currentDate.isAfter(dueDate)) {
                    submitBtn.setVisible(false);
                    modifyBtn.setVisible(false);
                    resubmitBtn.setVisible(false);
                }
            }
        }
    }

    public void selectPresentationPanel() {
        jTabbedPane1.setSelectedIndex(1);
    }

    public void selectCommunicationPanel(int selection, String channelID) {
        if (selection == 1) {
            jTabbedPane1.setSelectedIndex(2);
        } else {
            int index = jTabbedPane1.indexOfComponent(communicationScrollPanel);
            jTabbedPane1.removeTabAt(index);
            jTabbedPane1.insertTab("Communication", null, replyCommunicationScrollPanel, null, index);
            jTabbedPane1.setSelectedComponent(replyCommunicationScrollPanel);
            readFromCommunicationMessage(channelID);
        }
    }

    private void showPresentationPage() {
        int x = 0;
        List<String> data = FileHandler.readFile("presentation_confirmation.txt");
        for (String line : data) {
            String[] list = line.split(";");
            if (list[1].equals(user.getUserID()) && list[2].equals(assessmentID)) {
                x = 1;
            }
        }
        if (x == 0) {
            int index = jTabbedPane1.indexOfComponent(confirmPresentationPanel);
            jTabbedPane1.removeTabAt(index);
        } else {
            int index = jTabbedPane1.indexOfComponent(presentationPanel);
            jTabbedPane1.removeTabAt(index);
        }
    }

    private void readPresentationRequestFromFile() {
        String fileName = "presentation_request.txt";
        DefaultTableModel model = (DefaultTableModel) presentationRequestTable.getModel();
        model.setRowCount(0); // Clear existing rows
        List<String> data = FileHandler.readFile(fileName);
        for (String line : data) {
            String[] list = line.split(";");
            if (list[1].equals(user.getUserID())) {
                String[] reorderedData = {
                    list[0],
                    list[3],
                    list[4],
                    list[5],
                    list[6]
                };
                model.addRow(reorderedData);
            }
        }
        if (assessmentType.equals("internship_report") || assessmentType.equals("investigation")) {
            TableColumn column = presentationRequestTable.getColumnModel().getColumn(3);
            presentationRequestTable.getColumnModel().removeColumn(column);
        }
    }

    private void showPresentationRequestButton() {
        StudentPresentationActionPanel panel = new StudentPresentationActionPanel();
        StudentPresentationTableActionEvent event = (int row, Object value) -> {
            DefaultTableModel model = (DefaultTableModel) presentationRequestTable.getModel();
            int columnIndex = 0;
            String requestID = (String) model.getValueAt(row, columnIndex);
            int response = JOptionPane.showConfirmDialog(
                    null,
                    "Are you sure you want to delete " + requestID + " presentation request",
                    "Confirm Delete",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE
            );
            if (response == JOptionPane.YES_OPTION) {
                PresentationController action1 = new PresentationController();
                boolean result = action1.studentDeleteRequestPresentation(requestID);
                if (result) {
                    JOptionPane.showMessageDialog(null, "Successfully delete the presentation request");
                    dispose();
                    StudentAssessmentDetailPage page = new StudentAssessmentDetailPage(assessmentID, assessmentType);
                    page.setVisible(true);
                    page.selectPresentationPanel();
                }
            }
        };
        if (assessmentType.equals("internship_report") || assessmentType.equals("investigation")) {
            presentationRequestTable.getColumnModel().getColumn(4).setCellRenderer(panel.new rPanelActionRenderer());
            presentationRequestTable.getColumnModel().getColumn(4).setCellEditor(panel.new TableActionCellEditor(event));
        } else {
            presentationRequestTable.getColumnModel().getColumn(5).setCellRenderer(panel.new rPanelActionRenderer());
            presentationRequestTable.getColumnModel().getColumn(5).setCellEditor(panel.new TableActionCellEditor(event));
        }

    }

    private String[] getSupervisorAndSecondMarkerNames(String supervisorId, String secondMarkerId) {
        String[] names = new String[2];
        String fileName = "user.txt";
        List<String> data = FileHandler.readFile(fileName);
        for (String line : data) {
            String[] list = line.split(";");
            if (list.length >= 11) {
                String id = list[0].trim();
                if (id.equalsIgnoreCase(supervisorId)) {
                    names[0] = list[1].trim(); // Supervisor name
                } else if (id.equalsIgnoreCase(secondMarkerId)) {
                    names[1] = list[1].trim(); // Second Marker name
                }
            }
        }

        return names;
    }

    private void showPresentationConfirmationDetails() {
        List<String> data = FileHandler.readFile("presentation_confirmation.txt");
        List<String> assessmentDate = FileHandler.readFile("assessment.txt");
        presentationStatus.setOpaque(true); // Make the label opaque
        presentationStatus.setHorizontalAlignment(SwingConstants.CENTER); // Center the text
        for (String line : data) {
            String[] list = line.split(";");
            if (list[1].equals(user.getUserID())) {
                persentationDate.setText(list[3]);
                switch (list[5]) {
                    case "scheduled" -> {
                        presentationStatus.setText("Scheduled");
                        presentationStatus.setBackground(new Color(0x1B3D60));
                    }
                    case "completed" -> {
                        presentationStatus.setText("Completed");
                        presentationStatus.setBackground(new Color(0x1B6047));
                    }
                }
                if (list[4].trim().isEmpty()) {
                    presentationFeedback.setText("-");
                } else {
                    presentationFeedback.setText("<html>" + list[4] + "</html>");
                }
            }
        }
        for (String assessmentLine : assessmentDate) {
            String[] assessmentList = assessmentLine.split(";");
            if (assessmentList[0].equals(assessmentID)) {
                String supervisorId = assessmentList[4].trim(); // Supervisor ID
                String secondMarkerId = assessmentList[5].trim(); // Second Marker ID
                String[] names = getSupervisorAndSecondMarkerNames(supervisorId, secondMarkerId);
                supervisorName.setText(names[0]);
                if (secondMarkerId.isEmpty()) {
                    secondMarkerName.setText("-");

                } else {
                    secondMarkerName.setText(names[1]);

                }
            }
        }
    }

    private void showCreateDiscussionBtn() {
        createDiscussionBtn.setVisible(false);

        // Add ChangeListener to the JTabbedPane
        jTabbedPane1.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                // Check if the selected tab is the communicationScrollPanel
                int selectedIndex = jTabbedPane1.getSelectedIndex();
                if (selectedIndex == 2) {
                    createDiscussionBtn.setVisible(true);
                } else {
                    createDiscussionBtn.setVisible(false);
                }
            }
        });
    }

    private void readFromCommunicationChannel() {
        List<String> data = FileHandler.readFile("communication_channel.txt");

        // Clear the existing components from jPanel12 before adding new ones
        jPanel12.removeAll();
        jPanel12.setLayout(new BoxLayout(jPanel12, BoxLayout.Y_AXIS)); // Use a layout manager that supports dynamic content

        for (String line : data) {
            String[] list = line.split(";");
            if (list[2].equals(assessmentID)) {
                // Initialize components for each entry
                communicationPanel = new JPanel(new GridBagLayout());
                subject = new JLabel();
                openComBtn = new JButton();
                deleteComButton = new JButton();
                channelDate = new JLabel();
                communicationIcon = new JLabel();

                // Add border to communicationPanel
                communicationPanel.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                communicationPanel.setMaximumSize(new java.awt.Dimension(888, 68));
                communicationPanel.setMinimumSize(new java.awt.Dimension(888, 68));

                subject.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
                subject.setForeground(new java.awt.Color(2, 50, 99));
                subject.setText("<html>" + list[3] + "</html>");

                openComBtn.setBackground(new java.awt.Color(76, 127, 174));
                openComBtn.setFont(new java.awt.Font("Bell MT", 1, 12)); // NOI18N
                openComBtn.setForeground(new java.awt.Color(255, 255, 255));
                openComBtn.setText("Open");
                openComBtn.addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        int index = jTabbedPane1.indexOfComponent(communicationScrollPanel);
                        jTabbedPane1.removeTabAt(index);
                        jTabbedPane1.insertTab("Communication", null, replyCommunicationScrollPanel, null, index);
                        jTabbedPane1.setSelectedComponent(replyCommunicationScrollPanel);
                        readFromCommunicationMessage(list[0]);
                    }
                });

                deleteComButton.setBackground(new java.awt.Color(76, 127, 174));
                deleteComButton.setFont(new java.awt.Font("Bell MT", 1, 12)); // NOI18N
                deleteComButton.setForeground(new java.awt.Color(255, 255, 255));
                deleteComButton.setText("Delete");
                deleteComButton.setVisible(list[1].equals(user.getUserID()));
                deleteComButton.addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        int response = JOptionPane.showConfirmDialog(
                                null,
                                "Are you sure you want to delete this discussion channel",
                                "Confirm Delete",
                                JOptionPane.YES_NO_OPTION,
                                JOptionPane.WARNING_MESSAGE
                        );
                        if (response == JOptionPane.YES_OPTION) {
                            CommunicationController delete = new CommunicationController();
                            boolean result = delete.deleteDiscussionChannel(list[0]);
                            if (result) {
                                JOptionPane.showMessageDialog(null, "Successfully delete the discussion channel");
                                redirectAssessmentPage(assessmentID, assessmentType, 1, null);
                            }
                        }
                    }
                });
                channelDate.setFont(
                        new java.awt.Font("Bell MT", 0, 18)); // NOI18N
                channelDate.setForeground(
                        new java.awt.Color(2, 50, 99));
                channelDate.setText(list[4]);

                communicationIcon.setIcon(
                        new javax.swing.ImageIcon(getClass().getResource("/chat1.png"))); // NOI18N

                GridBagConstraints gbc = new GridBagConstraints();
                gbc.insets = new Insets(10, 10, 10, 10);

                // Add components to the panel with layout constraints
                gbc.gridx = 0;
                gbc.gridy = 0;
                gbc.anchor = GridBagConstraints.WEST;

                communicationPanel.add(communicationIcon, gbc);

                gbc.gridx = 1;
                gbc.weightx = 1.0; // Allows the subject label to fill available space
                gbc.anchor = GridBagConstraints.WEST;

                communicationPanel.add(subject, gbc);

                gbc.gridx = 2;
                gbc.weightx = 0.0;
                gbc.anchor = GridBagConstraints.CENTER;

                communicationPanel.add(channelDate, gbc);

                gbc.gridx = 3;

                communicationPanel.add(openComBtn, gbc);

                gbc.gridx = 4;

                communicationPanel.add(deleteComButton, gbc);

                // Add each communicationPanel to jPanel12 with a vertical gap
                jPanel12.add(communicationPanel);

                jPanel12.add(Box.createVerticalStrut(10)); // Add vertical gap between each panel
            }
            communicationScrollPanel.setViewportView(jPanel12);
        }

        // Revalidate and repaint the container to reflect the changes
        jPanel12.revalidate();
        jPanel12.repaint();
    }

    private void readFromCommunicationMessage(String channelID) {
        List<String> data = FileHandler.readFile("communication_channel.txt");
        List<String> messageData = FileHandler.readFile("communication_message.txt");
        List<String> userData = FileHandler.readFile("user.txt");
        String channelSubject = null;
        StudentAssessmentDetailPage page = this;
        for (String line : data) {
            String[] list = line.split(";");
            if (list[0].equals(channelID)) {
                channelSubject = list[3];
                selectedSubject.setText("<html>" + list[3] + "</html>");
                createdDate.setText("<html>" + list[4] + "</html>");
                for (String FirstmessageLine : messageData) {
                    String[] FirstmessageList = FirstmessageLine.split(";");
                    if (FirstmessageList[1].equals(channelID)) {
                        createdMessage.setText("<html>" + FirstmessageList[3] + "</html>");
                        break;
                    }
                }
                for (String userLine : userData) {
                    String[] userList = userLine.split(";");
                    if (userList[0].equals(list[1])) {
                        createdName.setText(userList[1]);
                    }
                }
                reply.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        CreateNewMessagePage messagePage = new CreateNewMessagePage(assessmentID, assessmentType, list[3], list[0], page, null);
                        messagePage.setVisible(true);
                    }
                });

            }
        }

        // Ensure jPanel13 uses GridBagLayout
        jPanel13.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.insets = new Insets(5, 5, 5, 5);

        // Remove all components from jPanel13 first, if necessary
        jPanel13.removeAll();

        // Add jPanel7 first (fixed at the top)
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 0;
        jPanel13.add(jPanel7, gbc);

        // Add jPanel17 right below jPanel7
        gbc.gridy++;
        jPanel13.add(jPanel17, gbc);

        boolean firstMatchFound = false;
        int replyPanelY = gbc.gridy + 1; // Start placing reply panels below jPanel17

        for (String messageLine : messageData) {
            String[] messageList = messageLine.split(";");
            if (messageList[1].equals(channelID)) {
                if (firstMatchFound) {
                    communicationReplyPanel = new JPanel();
                    resubjectLabel = new JLabel();
                    replyMessage = new JLabel();
                    replyName = new JLabel();
                    replyDate = new JLabel();
                    deleteReply = new JLabel();

                    communicationReplyPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                    communicationReplyPanel.setPreferredSize(new java.awt.Dimension(766, 95));

                    resubjectLabel.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
                    resubjectLabel.setForeground(new java.awt.Color(2, 50, 99));
                    resubjectLabel.setText("<html>" + "Re: " + channelSubject + "</html>");

                    replyMessage.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
                    replyMessage.setForeground(new java.awt.Color(2, 50, 99));
                    replyMessage.setText("<html>" + messageList[3] + "</html>");
                    replyMessage.setPreferredSize(new java.awt.Dimension(563, 57));

                    for (String userLine : userData) {
                        String[] userList = userLine.split(";");
                        if (userList[0].equals(messageList[2])) {
                            replyName.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
                            replyName.setForeground(new java.awt.Color(2, 50, 99));
                            replyName.setText("From: " + userList[1]);
                        }
                    }

                    replyDate.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
                    replyDate.setForeground(new java.awt.Color(2, 50, 99));
                    replyDate.setText(messageList[4]);

                    deleteReply.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
                    deleteReply.setForeground(new java.awt.Color(2, 50, 99));
                    deleteReply.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    deleteReply.setText("Delete");
                    deleteReply.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    deleteReply.setVisible(messageList[2].equals(user.getUserID()));
                    deleteReply.addMouseListener(new java.awt.event.MouseAdapter() {
                        @Override
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            int response = JOptionPane.showConfirmDialog(
                                    null,
                                    "Are you sure you want to delete this message",
                                    "Confirm Delete",
                                    JOptionPane.YES_NO_OPTION,
                                    JOptionPane.WARNING_MESSAGE
                            );
                            if (response == JOptionPane.YES_OPTION) {
                                CommunicationController delete = new CommunicationController();
                                boolean result = delete.deleteMessage(messageList[0]);
                                if (result) {
                                    JOptionPane.showMessageDialog(null, "Successfully delete the message");
                                    redirectAssessmentPage(assessmentID, assessmentType, 2, messageList[1]);
                                }
                            }
                        }
                    });

                    // Set layout for communicationReplyPanel
                    GroupLayout communicationReplyPanelLayout = new GroupLayout(communicationReplyPanel);
                    communicationReplyPanel.setLayout(communicationReplyPanelLayout);
                    communicationReplyPanelLayout.setHorizontalGroup(
                            communicationReplyPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(communicationReplyPanelLayout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(communicationReplyPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                    .addGroup(communicationReplyPanelLayout.createSequentialGroup()
                                                            .addComponent(resubjectLabel)
                                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(replyDate, GroupLayout.PREFERRED_SIZE, 155, GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(communicationReplyPanelLayout.createSequentialGroup()
                                                            .addGroup(communicationReplyPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                    .addComponent(replyMessage, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(replyName, GroupLayout.PREFERRED_SIZE, 399, GroupLayout.PREFERRED_SIZE))
                                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(deleteReply, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)))
                                            .addContainerGap())
                    );
                    communicationReplyPanelLayout.setVerticalGroup(
                            communicationReplyPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(communicationReplyPanelLayout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(communicationReplyPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                    .addComponent(resubjectLabel)
                                                    .addComponent(replyDate))
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(replyName)
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(communicationReplyPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                    .addComponent(deleteReply, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(replyMessage, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    );

                    // Add communicationReplyPanel to jPanel13
                    gbc.gridy = replyPanelY++;
                    jPanel13.add(communicationReplyPanel, gbc);
                } else {
                    firstMatchFound = true;
                }
            }
        }

        // Finalize layout by adding vertical space and stretching the last component
        gbc.gridy = replyPanelY;
        gbc.weighty = 1.0;
        jPanel13.add(Box.createVerticalGlue(), gbc);

        // Revalidate and repaint jPanel13 to refresh the UI
        jPanel13.revalidate();
        jPanel13.repaint();

        // Update the scroll pane with the new content
        replyCommunicationScrollPanel.setViewportView(jPanel13);

    }

    private void redirectAssessmentPage(String assessmentID, String assessmentType, int number, String ID) {
        StudentAssessmentDetailPage details = new StudentAssessmentDetailPage(assessmentID, assessmentType);
        details.setVisible(true);
        details.selectCommunicationPanel(number, ID);
        this.setVisible(false);
    }

    private void readUserFromFile() {
        DefaultTableModel model = (DefaultTableModel) peopleTable.getModel();
        model.setRowCount(0); // Clear existing rows
        List<String> data = FileHandler.readFile("assessment.txt");
        for (String line : data) {
            String[] list = line.split(";");
            if (list[0].equals(assessmentID)) {
                String[] names = getSupervisorAndSecondMarkerNames(list[4], list[5]);
                String[] supevisorRecord = {
                    list[4],
                    names[0],
                    "supervisor"
                };
                model.addRow(supevisorRecord);

                if (names[1] != null) {
                    String[] secondMarkerRecord = {
                        list[5],
                        names[1],
                        "second marker"
                    };
                    model.addRow(secondMarkerRecord);
                }
                break;
            }
        }
        List<String> studentAssessmentData = FileHandler.readFile("student_assessment.txt");
        for (String studentAssessmentline : studentAssessmentData) {
            String[] studentAssessmentList = studentAssessmentline.split(";");
            if (studentAssessmentList[2].equals(assessmentID)) {
                List<String> userData = FileHandler.readFile("user.txt");
                for (String userLine : userData) {
                    String[] userList = userLine.split(";");
                    if (userList[0].equals(studentAssessmentList[1])) {
                        String[] studentRecord = {
                            userList[0],
                            userList[1],
                            "student"
                        };
                        model.addRow(studentRecord);
                    }
                }
            }
        }
    }

    private void liveSearch() {
        // Add ActionListener to the roleComboBox for filtering when the selection changes
        roleComboBox.addActionListener(e -> filterTable());

        // Add DocumentListener to the search JTextField for live search as the user types
        search.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filterTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filterTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filterTable();
            }
        });
    }

    // Method to filter the table based on search text and selected role
    private void filterTable() {
        String searchText = search.getText().toLowerCase();
        String selectedRole = roleComboBox.getSelectedItem().toString().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) peopleTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        peopleTable.setRowSorter(sorter);

        List<RowFilter<Object, Object>> filters = new ArrayList<>(2);

        // Add filter for search text if it is not empty
        if (searchText.trim().length() > 0) {
            filters.add(RowFilter.regexFilter("(?i)" + searchText, 1));
        }

        // Add filter for selected role if it is not "None"
        if (!selectedRole.equals("none")) {
            filters.add(RowFilter.regexFilter("(?i)" + selectedRole, 2));
        }

        // Apply the filters
        if (filters.isEmpty()) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.andFilter(filters));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel assessment;
    private javax.swing.JLabel assessmentStatus;
    private javax.swing.JLabel backIcon;
    private javax.swing.JLabel background;
    private javax.swing.JScrollPane communicationScrollPanel;
    private javax.swing.JPanel confirmPresentationPanel;
    private javax.swing.JButton createDiscussionBtn;
    private javax.swing.JLabel createdDate;
    private javax.swing.JLabel createdMessage;
    private javax.swing.JLabel createdName;
    private javax.swing.JLabel dueDate;
    private javax.swing.JTextArea feedback;
    private javax.swing.JLabel gradeStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lastModified;
    private javax.swing.JButton modifyBtn;
    private javax.swing.JTable peopleTable;
    private javax.swing.JLabel persentationDate;
    private javax.swing.JLabel presentationFeedback;
    private javax.swing.JPanel presentationPanel;
    private javax.swing.JTable presentationRequestTable;
    private javax.swing.JLabel presentationStatus;
    private javax.swing.JLabel reply;
    private javax.swing.JScrollPane replyCommunicationScrollPanel;
    private javax.swing.JButton requestButton;
    private javax.swing.JButton resubmitBtn;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JTextField search;
    private javax.swing.JLabel secondMarkerName;
    private javax.swing.JLabel selectedSubject;
    private javax.swing.JLabel studentEcSubmission;
    private javax.swing.JPanel studentHeader;
    private javax.swing.JLabel studentLogo;
    private javax.swing.JLabel studentLogout;
    private javax.swing.JLabel studentNotification;
    private javax.swing.JLabel studentProfile;
    private javax.swing.JLabel submissionLink;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel supervisorName;
    // End of variables declaration//GEN-END:variables
}
