/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projectmanagementsystem;

import com.mycompany.projectmanagementsystem.Assessment.AssessmentController;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author shuhuilee
 */
public class PM_assessment_edit extends javax.swing.JFrame {
    private final String assessmentType;
    private final String assessmentID;

    public PM_assessment_edit(String assessmentType, String assessmentID) {
        initComponents();
        setIconImage();
        populateLecturers();
        this.assessmentType = assessmentType;
        this.assessmentID = assessmentID;
        
    }
    private void populateLecturers() {
            String fileName = "user.txt";
            try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] list = line.split(";");
                    if (list.length > 10 && list[10].equalsIgnoreCase("lecturer")) {
                        String userIdAndName = list[0] + " - " + list[1]; // Concatenate user ID and name
                        supervisorName.addItem(userIdAndName);
                        secondmarker_name.addItem(userIdAndName);
                    }
                }
            } catch (IOException ex) {
                System.out.println("Error reading file: " + ex.getMessage());
            }
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ec_edit_assessment = new javax.swing.JLabel();
        supervisor_name = new javax.swing.JLabel();
        second_maker_name = new javax.swing.JLabel();
        duedate = new javax.swing.JLabel();
        supervisorName = new javax.swing.JComboBox<>();
        secondmarker_name = new javax.swing.JComboBox<>();
        sava_button = new javax.swing.JButton();
        back_button = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Edit assessment");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ec_edit_assessment.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        ec_edit_assessment.setForeground(new java.awt.Color(2, 50, 99));
        ec_edit_assessment.setText("Edit Assessment");
        getContentPane().add(ec_edit_assessment, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        supervisor_name.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        supervisor_name.setText("Supervisor Name：");
        getContentPane().add(supervisor_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        second_maker_name.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        second_maker_name.setText("Second Marker Name ：");
        getContentPane().add(second_maker_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        duedate.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        duedate.setText("Duedate：");
        getContentPane().add(duedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 90, -1));

        supervisorName.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        supervisorName.setMaximumSize(new java.awt.Dimension(64, 28));
        supervisorName.setMinimumSize(new java.awt.Dimension(64, 28));
        supervisorName.setPreferredSize(new java.awt.Dimension(64, 28));
        getContentPane().add(supervisorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 210, -1));

        secondmarker_name.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        secondmarker_name.setMaximumSize(new java.awt.Dimension(64, 28));
        secondmarker_name.setMinimumSize(new java.awt.Dimension(64, 28));
        secondmarker_name.setPreferredSize(new java.awt.Dimension(64, 28));
        getContentPane().add(secondmarker_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 210, -1));

        sava_button.setBackground(new java.awt.Color(76, 127, 174));
        sava_button.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        sava_button.setForeground(new java.awt.Color(255, 255, 255));
        sava_button.setText("Save");
        sava_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sava_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(sava_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        back_button.setBackground(new java.awt.Color(76, 127, 174));
        back_button.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        back_button.setForeground(new java.awt.Color(255, 255, 255));
        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(back_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, -1, -1));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 210, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_background.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(500, 300));
        jLabel1.setMinimumSize(new java.awt.Dimension(500, 300));
        jLabel1.setPreferredSize(new java.awt.Dimension(500, 300));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sava_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sava_buttonActionPerformed
        // TODO add your handling code here:
        String supervisor = (String) supervisorName.getSelectedItem();
        String secondMarker = (String) secondmarker_name.getSelectedItem();
        Date dueDate = jDateChooser1.getDate();

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDueDate = dateFormat.format(dueDate);
        
        // Extract only the ID
        String supervisorID = supervisor.split(" - ")[0]; // Extract supervisor ID
        String secondMarkerID = secondMarker.split(" - ")[0]; // Extract second marker ID
        
        // Check if the due date is later than the current date
        Calendar currentDate = Calendar.getInstance();
        currentDate.add(Calendar.DAY_OF_MONTH, 5); // Add 5 days
        Date minDueDate = currentDate.getTime();

        if (dueDate.before(minDueDate)) {
            JOptionPane.showMessageDialog(null, "Due date must be at least 5 days later than today.", "Error", JOptionPane.ERROR_MESSAGE);
            return; 
        }
        
        AssessmentController controller = new AssessmentController();
        boolean updateSuccessful = controller.assessment_Edit(assessmentID,supervisorID,secondMarkerID,formattedDueDate);
        
        
        if (updateSuccessful) {
            JOptionPane.showMessageDialog(null, "Assessment details saved successfully");
        } else {
            JOptionPane.showMessageDialog(null, "Failed to save assessment details. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further execution if the update failed
        }
        
        PM_assessment_page assessmentPage = new PM_assessment_page(assessmentType);
        assessmentPage.setVisible(true);
        dispose();
      
    }//GEN-LAST:event_sava_buttonActionPerformed

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        PM_assessment_page assessment = new PM_assessment_page(assessmentType);
        assessment.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_back_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PM_assessment_edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PM_assessment_edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PM_assessment_edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PM_assessment_edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String assessmentType = "type"; 
                String assessmentID = "ID"; 
                new PM_assessment_edit(assessmentType, assessmentID).setVisible(true);
            }
        });
    }
    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Sysco_icon_with_background.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_button;
    private javax.swing.JLabel duedate;
    private javax.swing.JLabel ec_edit_assessment;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton sava_button;
    private javax.swing.JLabel second_maker_name;
    private javax.swing.JComboBox<String> secondmarker_name;
    private javax.swing.JComboBox<String> supervisorName;
    private javax.swing.JLabel supervisor_name;
    // End of variables declaration//GEN-END:variables
}
