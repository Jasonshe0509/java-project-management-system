/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projectmanagementsystem;

import com.mycompany.projectmanagementsystem.GeneralFunction.FileHandler;
import com.mycompany.projectmanagementsystem.GeneralFunction.SessionManager;
import com.mycompany.projectmanagementsystem.User.User;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class LecturerReportGrading extends javax.swing.JFrame {

    /**
     * Creates new form LecturerReportGrading
     */
    private final SessionManager sessionManager = SessionManager.getInstance();
    User user = sessionManager.getCurrentUser();
    private String AssmntID;
    private String stdID;
    private String stdName;
    private String submissionLink;
    private String AssmntType;
    private int mark1;
    private int mark2;
    private int mark3;
    private String feedback;
    
    public LecturerReportGrading(String assmntid, String id, String name, String link, String type) {
        this.AssmntID = assmntid;
        this.stdID = id;
        this.stdName = name;
        this.submissionLink = link;
        this.AssmntType = type;
        initComponents();
        setIconImage();
        showReportMarkingScheme();
        showGradedReport(AssmntID);
        
        stdIDLabel.setText(id);
        stdNameLabel.setText(name);
        stdSubmissionLink.setText("<html><a href=''>" + link + "</a></html>");
        
    }
    
    private void openConfirmationDialog(int mark1, int mark2, int mark3, String feedback) {
        LecturerReportConfirm confirm = new LecturerReportConfirm(this, AssmntID, stdID, stdName, mark1, mark2, mark3, feedback);
        confirm.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        stdIDLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        stdNameLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        stdSubmissionLink = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        contentMark = new javax.swing.JTextField();
        presentMark = new javax.swing.JTextField();
        formatMark = new javax.swing.JTextField();
        contentMarkScheme = new javax.swing.JLabel();
        formatMarkScheme = new javax.swing.JLabel();
        presentMarkScheme = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        feedbackRptField = new javax.swing.JTextArea();
        saveBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lecturer Grading Report");
        setMaximumSize(new java.awt.Dimension(700, 500));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setMaximumSize(new java.awt.Dimension(660, 35));
        jPanel3.setMinimumSize(new java.awt.Dimension(660, 35));
        jPanel3.setPreferredSize(new java.awt.Dimension(660, 35));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(2, 50, 99));
        jLabel2.setText("Supervisee ID");

        stdIDLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        stdIDLabel.setForeground(new java.awt.Color(2, 50, 99));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stdIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stdIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMaximumSize(new java.awt.Dimension(660, 35));
        jPanel4.setMinimumSize(new java.awt.Dimension(660, 35));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(2, 50, 99));
        jLabel5.setText("Name");

        stdNameLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        stdNameLabel.setForeground(new java.awt.Color(2, 50, 99));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stdNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stdNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setMaximumSize(new java.awt.Dimension(660, 35));
        jPanel5.setMinimumSize(new java.awt.Dimension(660, 35));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(2, 50, 99));
        jLabel7.setText("Submission Link");

        stdSubmissionLink.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        stdSubmissionLink.setForeground(new java.awt.Color(2, 50, 99));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stdSubmissionLink, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stdSubmissionLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)))
        );

        jPanel6.setMaximumSize(new java.awt.Dimension(275, 211));
        jPanel6.setMinimumSize(new java.awt.Dimension(275, 211));

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(2, 50, 99));
        jLabel10.setText("Content:");
        jLabel10.setMaximumSize(new java.awt.Dimension(100, 27));
        jLabel10.setMinimumSize(new java.awt.Dimension(100, 27));
        jLabel10.setPreferredSize(new java.awt.Dimension(100, 27));

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(2, 50, 99));
        jLabel11.setText("Presentation:");
        jLabel11.setMaximumSize(new java.awt.Dimension(100, 27));
        jLabel11.setMinimumSize(new java.awt.Dimension(100, 27));
        jLabel11.setPreferredSize(new java.awt.Dimension(100, 27));

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(2, 50, 99));
        jLabel12.setText("Format:");
        jLabel12.setMaximumSize(new java.awt.Dimension(100, 27));
        jLabel12.setMinimumSize(new java.awt.Dimension(100, 27));
        jLabel12.setPreferredSize(new java.awt.Dimension(100, 27));

        contentMark.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        contentMark.setForeground(new java.awt.Color(2, 50, 99));
        contentMark.setMaximumSize(new java.awt.Dimension(40, 22));
        contentMark.setMinimumSize(new java.awt.Dimension(40, 22));
        contentMark.setPreferredSize(new java.awt.Dimension(40, 22));

        presentMark.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        presentMark.setForeground(new java.awt.Color(2, 50, 99));
        presentMark.setMaximumSize(new java.awt.Dimension(40, 22));
        presentMark.setMinimumSize(new java.awt.Dimension(40, 22));
        presentMark.setPreferredSize(new java.awt.Dimension(40, 22));

        formatMark.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        formatMark.setForeground(new java.awt.Color(2, 50, 99));
        formatMark.setMaximumSize(new java.awt.Dimension(40, 22));
        formatMark.setMinimumSize(new java.awt.Dimension(40, 22));
        formatMark.setPreferredSize(new java.awt.Dimension(40, 22));

        contentMarkScheme.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        contentMarkScheme.setText("/ 60");

        formatMarkScheme.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        formatMarkScheme.setText("/ 10");

        presentMarkScheme.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        presentMarkScheme.setText("/ 30");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(presentMark, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(presentMarkScheme))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(formatMark, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formatMarkScheme))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(contentMark, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contentMarkScheme)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contentMark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contentMarkScheme))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formatMark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formatMarkScheme))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(presentMark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(presentMarkScheme))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jPanel7.setMaximumSize(new java.awt.Dimension(275, 211));
        jPanel7.setMinimumSize(new java.awt.Dimension(275, 211));

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(2, 50, 99));
        jLabel9.setText("Feedback");

        feedbackRptField.setColumns(20);
        feedbackRptField.setRows(5);
        jScrollPane1.setViewportView(feedbackRptField);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(221, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        saveBtn.setBackground(new java.awt.Color(76, 127, 174));
        saveBtn.setFont(new java.awt.Font("Bell MT", 1, 12)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save");
        saveBtn.setPreferredSize(new java.awt.Dimension(60, 25));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(76, 127, 174));
        backBtn.setFont(new java.awt.Font("Bell MT", 1, 12)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.setPreferredSize(new java.awt.Dimension(60, 25));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(220, 220, 220))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(2, 50, 99));
        jLabel3.setText("Grading");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 660, 430));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_background.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        int maxMark1 = 0, maxMark2 = 0, maxMark3 = 0;

        List<String> data = FileHandler.readFile("assessment_type.txt");
        for (String line : data) {
            String[] list = line.split(";");
            if (list[0].equals(AssmntType)) {
                maxMark1 = Integer.parseInt(list[1]);
                maxMark2 = Integer.parseInt(list[2]);
                maxMark3 = Integer.parseInt(list[3]);
                break; // Break once we find the matching assessment type
            }
        }

        String mark1Text = contentMark.getText().trim(); 
        if (mark1Text.isEmpty() && contentMark.isEditable()) {
            JOptionPane.showMessageDialog(null, "Content mark cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!mark1Text.isEmpty() && contentMark.isEditable()){
            try {
                mark1 = Integer.parseInt(mark1Text);
                if (mark1 < 0 || mark1 > maxMark1) {
                    JOptionPane.showMessageDialog(null, "Content mark should be at most " + maxMark1 + ".", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please enter a valid integer for Content Mark.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        String mark2Text = formatMark.getText().trim();
        if (mark2Text.isEmpty() && formatMark.isEditable()) {
            JOptionPane.showMessageDialog(null, "Format mark cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!mark2Text.isEmpty() && formatMark.isEditable()){
            try {
                mark2 = Integer.parseInt(mark2Text);
                if (mark2 < 0 || mark2 > maxMark2) {
                    JOptionPane.showMessageDialog(null, "Format mark should be at most " + maxMark2 + ".", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please enter a valid integer for Format Mark.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        String mark3Text = presentMark.getText().trim();
        if (mark3Text.isEmpty() && presentMark.isEditable()) {
            JOptionPane.showMessageDialog(null, "Presentation mark cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!mark3Text.isEmpty() && presentMark.isEditable()){
            try {
                mark3 = Integer.parseInt(mark3Text);
                if (mark3 < 0 || mark3 > maxMark3) {
                    JOptionPane.showMessageDialog(null, "Presentation mark should be at most " + maxMark3 + ".", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please enter a valid integer for Presentation Mark.", "Error", JOptionPane.ERROR_MESSAGE);
                return; 
            }
        }
        
        feedback = feedbackRptField.getText().trim();
        if (feedback.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Feedback field cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return; 
        }

        openConfirmationDialog(mark1, mark2, mark3, feedback);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecturerReportGrading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecturerReportGrading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecturerReportGrading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecturerReportGrading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecturerReportGrading("AssmntID", "stdID", "name", "subLink", "type").setVisible(true);
            }
        });
    }
    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Sysco_icon_with_background.png")));
    }
    
    private void showReportMarkingScheme(){
        List<String> data = FileHandler.readFile("assessment_type.txt");
        for (String line : data) {
            String[] list = line.split(";");
            if (list[0].equals(AssmntType)) {
                if("0".equals(list[1])){
                    contentMark.setText("0");
                    contentMark.setEditable(false);
                } else if ("0".equals(list[2])){
                    formatMark.setText("0");
                    formatMark.setEditable(false);
                } else if ("0".equals(list[3])){
                    presentMark.setText("0");
                    presentMark.setEditable(false);
                }
                contentMarkScheme.setText("/ " + list[1]);
                formatMarkScheme.setText("/ " + list[2]);
                presentMarkScheme.setText("/ " + list[3]);
                break; // Break once we find the matching assessment type
            }
        }
    }
    
    private void showRptFeedback() {
        List<String> data = FileHandler.readFile("student_assessment.txt");
        // show feedback given by another marker 
        for (String line : data) {
            String[] list = line.split(";");
            if (list[1].equals(stdID) && !list[7].isEmpty()) {
                feedbackRptField.setText(list[7]);
                if(!list[8].isEmpty()){
                    feedbackRptField.setText(list[7] + "\n\nGrade Obtained: " + list[8]);
                }
            }
        }
    }
    
    private void showMarks(boolean isSupervisor) {
        List<String> data = FileHandler.readFile("student_assessment.txt");
        // show feedback given by another marker 
        for (String line : data) {
            String[] list = line.split(";");
            if (list[1].equals(stdID)) {
                if ("internship_report".equals(AssmntType) || "investigation".equals(AssmntType)) {
                    jLabel10.setText("Your Mark:");
                    contentMark.setText(list[9]);
                    contentMarkScheme.setText("/ 100");
                    jLabel12.setVisible(false);
                    formatMark.setVisible(false);
                    formatMarkScheme.setVisible(false);
                    jLabel11.setText("Total:");
                    presentMark.setText(list[9]);
                    presentMarkScheme.setText("/ 100");
                    break;
                } else {
                    float mark1 = 0;
                    float mark2 = 0;
                    boolean mark1Valid = false;
                    boolean mark2Valid = false;

                    if (isSupervisor && !list[9].isEmpty()) {
                        mark1 = Float.parseFloat(list[9]);
                        mark1Valid = true;
                    } else if (!isSupervisor && !list[10].isEmpty()) {
                        mark1 = Float.parseFloat(list[10]);
                        mark1Valid = true;
                    }

                    if (isSupervisor && !list[10].isEmpty()) {
                        mark2 = Float.parseFloat(list[10]);
                        mark2Valid = true;
                    } else if (!isSupervisor && !list[9].isEmpty()) {
                        mark2 = Float.parseFloat(list[9]);
                        mark2Valid = true;
                    }

                    // Calculate the average if both marks are valid
                    float average = (mark1Valid && mark2Valid) ? (mark1 + mark2) / 2 : (mark1Valid ? mark1 : mark2);

                    // Set the labels accordingly
                    if (isSupervisor && mark1Valid) {
                        jLabel10.setText("Your Mark:");
                        contentMark.setText(String.valueOf(mark1));
                        jLabel12.setText("<html>Second Marker's Mark:</html>");
                        formatMark.setText(String.valueOf(mark2));
                    } else if (!isSupervisor && mark1Valid) {
                        jLabel10.setText("Your Mark:");
                        contentMark.setText(String.valueOf(mark1));
                        jLabel12.setText("Supervisor's Mark:");
                        formatMark.setText(String.valueOf(mark2));
                    }

                    contentMarkScheme.setText("/ 100");
                    formatMarkScheme.setText("/ 100");
                    jLabel11.setText("Total:");
                    presentMark.setText(String.valueOf(average));
                    presentMarkScheme.setText("/ 100");
                    break;
                }   
            }
        }
    }
  
    private void showGradedReport(String assessmentID) {
        List<String> assessmentData = FileHandler.readFile("assessment.txt");
        List<String> studentAssessmentData = FileHandler.readFile("student_assessment.txt");

        boolean isSupervisor = isUserSupervisor(assessmentData, assessmentID);
        boolean isSecondMarker = isUserSecondMarker(assessmentData, assessmentID);
        
        if (isSupervisor || isSecondMarker) {
            displayGradedReport(studentAssessmentData, isSupervisor);       
        }
    }

    private boolean isUserSupervisor(List<String> assessmentData, String assessmentID) {
        for (String line : assessmentData) {
            String[] fields = line.split(";");
            if (fields[0].equals(assessmentID) && fields[4].equals(user.getUserID())) {
                return true;
            }
        }
        return false;
    }

    private boolean isUserSecondMarker(List<String> assessmentData, String assessmentID) {
        for (String line : assessmentData) {
            String[] fields = line.split(";");
            if (fields[0].equals(assessmentID) && fields[5].equals(user.getUserID())) {
                return true;
            }
        }
        return false;
    }

    private void displayGradedReport(List<String> studentAssessmentData, boolean isSupervisor) {
        for (String line : studentAssessmentData) {
            String[] fields = line.split(";");
            if (fields[1].equals(stdID)) {
                boolean isMarked = !fields[9].isEmpty();
                boolean isSecMarked = !fields[10].isEmpty();
                boolean hasFeedback = fields.length > 5 && fields[4] != null && !fields[4].isEmpty();

                if (isSupervisor && isMarked) {
                    showMarks(isSupervisor);
                    showRptFeedback();
                    disableEditing();
                } else if (!isSupervisor && isSecMarked) {
                    showMarks(!isSupervisor);
                    showRptFeedback();
                    disableEditing();
                } else if (isSupervisor || !isSupervisor && hasFeedback){
                    showRptFeedback();
                }
            }
        }
    }

    private void disableEditing() {
        contentMark.setEditable(false);
        formatMark.setEditable(false);
        presentMark.setEditable(false);
        feedbackRptField.setEditable(false);
        saveBtn.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField contentMark;
    private javax.swing.JLabel contentMarkScheme;
    private javax.swing.JTextArea feedbackRptField;
    private javax.swing.JTextField formatMark;
    private javax.swing.JLabel formatMarkScheme;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField presentMark;
    private javax.swing.JLabel presentMarkScheme;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel stdIDLabel;
    private javax.swing.JLabel stdNameLabel;
    private javax.swing.JLabel stdSubmissionLink;
    // End of variables declaration//GEN-END:variables
}
